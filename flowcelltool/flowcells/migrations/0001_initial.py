# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-10-02 13:22
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BarcodeSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Full name of the barcode adapter set', max_length=100)),
                ('short_name', models.CharField(db_index=True, help_text='Short, unique identifier of barcode adapter set', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Short description of the barcode set<a href="http://daringfireball.net/projects/markdown/syntax" target="_blank">Markdown syntax</a> allowed, but no raw HTML. Examples: **bold**, *italic*, indent 4 spaces for a code block.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BarcodeSetEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('sequence', models.CharField(max_length=200)),
                ('barcode_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barcodes', to='flowcells.BarcodeSet')),
            ],
        ),
        migrations.CreateModel(
            name='FlowCell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='The full flow cell name, e.g., 160303_ST-K12345_0815_A_BCDEFGHIXX_LABEL', max_length=100, validators=[django.core.validators.RegexValidator('^(?P<date>\\d{6,6})_(?P<machine_name>[^_]+)_(?P<run_no>\\d+)_(?P<slot>\\w)_(?P<vendor_id>[^_]+)(_(?P<label>.+))?$', message='Invalid flow cell name')])),
                ('num_lanes', models.IntegerField(default=8, help_text='Number of lanes on flowcell 8 for HiSeq, 4 for NextSeq')),
                ('status', models.CharField(choices=[('initial', 'initial'), ('seq_complete', 'sequecing complete'), ('seq_failed', 'sequencing failed'), ('demux_complete', 'demultiplexing complete'), ('demux_delivered', 'demultiplexing results delivered')], default='initial', help_text='Processing status of flow cell', max_length=50)),
                ('operator', models.CharField(max_length=100)),
                ('is_paired', models.BooleanField(default=False, help_text='Check for paired reads')),
                ('index_read_count', models.IntegerField(default=1, help_text='Number of index reads that were used (0..2)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2)])),
                ('rta_version', models.IntegerField(choices=[(1, 'RTA v1'), (2, 'RTA v2'), (0, 'other')], default=2, help_text='Major RTA version, implies bcl2fastq version')),
                ('read_length', models.IntegerField(default=151)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('reference', models.CharField(choices=[('hg19', 'human'), ('mm9', 'mouse'), ('dm6', 'fly'), ('danRer6', 'zebrafish'), ('rn11', 'rat'), ('ce11', 'worm'), ('sacCer3', 'yeast'), ('__other__', 'other')], default='hg19', max_length=100)),
                ('lane_numbers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1)]), size=None)),
                ('barcode', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='flowcells.BarcodeSetEntry')),
                ('barcode2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='barcodes2', to='flowcells.BarcodeSetEntry')),
                ('barcode_set', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='flowcells.BarcodeSet')),
                ('barcode_set2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='barcode_sets2', to='flowcells.BarcodeSet')),
                ('flow_cell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='libraries', to='flowcells.FlowCell')),
            ],
        ),
        migrations.CreateModel(
            name='SequencingMachine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor_id', models.CharField(db_index=True, help_text='Vendor ID of the machine', max_length=100, unique=True)),
                ('label', models.CharField(help_text='Short name of the machine', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Short description regarding the machine<a href="http://daringfireball.net/projects/markdown/syntax" target="_blank">Markdown syntax</a> allowed, but no raw HTML. Examples: **bold**, *italic*, indent 4 spaces for a code block.', null=True)),
                ('machine_model', models.CharField(choices=[('MiSeq', 'MiSeq'), ('MiniSeq', 'MiniSeq'), ('NextSeq500', 'NextSeq 500'), ('HiSeq1000', 'HiSeq 1000'), ('HiSeq1500', 'HiSeq 1500'), ('HiSeq3000', 'HiSeq 3000'), ('HiSeqHiSeq40001000', 'HiSeq 4000'), ('other', 'Other')], help_text='The model of the machine', max_length=100)),
                ('slot_count', models.IntegerField(default=1)),
                ('dual_index_workflow', models.CharField(choices=[('A', 'MiSeq, HiSeq <=2500'), ('B', 'MiniSeq, NextSeq, HiSeq >=3000')], default='A', help_text='Workflow to use for dual indexing', max_length=10)),
            ],
        ),
        migrations.AddField(
            model_name='flowcell',
            name='sequencing_machine',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='flowcells.SequencingMachine'),
        ),
    ]
